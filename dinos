#!/usr/bin/env perl

#############################################################################
# Dinos - A mesozoic animation in ASCII art
#
# This program displays an animation using ASCII art.
# It requires the module Term::Animation, which requires Curses. You
# can get both modules from http://search.cpan.org. It will
# only run on platforms with a curses library, so Windows is not supported.
#
#############################################################################

use Term::Animation 2.0;
use Term::Animation::Entity;
use Data::Dumper;
use Curses;
use strict;
use warnings;

my $anim1 = Term::Animation->new();
$anim1->color(1);
my ($width, $height) = $anim1->screen_size();
halfdelay(1);
my $dinoArt = <<'END_ART';
  ______    _______  ___   ___   _____     ______
 |  __  \  |__   __| |  \  | |  /  _  \   /  ____|
 | |  |  |    | |    | | \ | | |  | |  | |  (___
 | |  |  |    | |    | |\ \| | |  | |  |  \___  \ 
 | |__|  |  __| |__  | | \ | | |  |_|  |  ____)  |
 |______/  |_______| |_|  \__|  \_____/  |______/


Usage:
 Press h for help
 Press p to pause/play
 Press a for asteroid (coming soon)
 Press c to continue to Dinos! 
END_ART

$anim1->new_entity(
            shape => $dinoArt,
            position => [$width / 2 - 25, $height / 2 - 7, 0],
);

print STDERR ("hello\n");
# Intro screen loop
while (1) {
    $anim1->animate();

    # Check for terminal resize
    my ($new_width, $new_height) = $anim1->screen_size();
    if ($new_width != $width || $new_height != $height) {
        #resizeterm($new_height, $new_width);
        #$anim1->update_term_size();
        
        # Update entity position
        #my $entity->{position} = [$new_height / 2 - 7, $new_width / 2 - 25, 0];
        
        $width = $new_width;
        $height = $new_height;
        #$anim1->update_term_size();
		    $anim1->remove_all_entities();
        $anim1->redraw_screen();
        #my $entity->position($width / 2 - 25, $height / 2 - 7, 0)
    }

    my $input = getch();
    if ($input eq 'c') { last; }
}

# main
my $anim = Term::Animation->new();
$anim->color(1);
# set the delay for getch
halfdelay(1);
# create a simple shape we can move around
my $shape = "<=O=>";
# turn our shape into an animation object
$anim->new_entity(
             shape         => $shape,        # object shape
             position      => [3, 7, 10],    # row / column / depth
             callback_args => [1, 0, 0, 0],  # the default callback
                                             #  routine takes a list
                                             #  of x,y,z,frame deltas
);

# animation loop
while(1) {
  # run and display a single animation frame
  $anim->animate();
  # use getch to control the frame rate, and get input at the
  # same time. (not a good idea if you are expecting much input)
  my $input = getch();
  if($input eq 'q') { last; }
}
# cleanly end the animation, to avoid hosing up the user's terminal
$anim->end();
